PROGRAM[
type tuple = class {
first : integer;
second : integer;
};
type node = class {
data : tuple;
next : node;
function getNextNode():node { return next; }
procedure modifyData(a:integer,b:integer) { data.first=a; data.second=b; }
function checkZero():boolean { return data.first==0&&data.second==0; }
};
root : node;
procedure clearRootNode() { root=null; stop; }
procedure main(num:integer,strs:!array[[string]]) { root=new node(); root.data=new tuple(); modifyData[integer,integer](1,2); root.next=new node(); root.next.data=new tuple(); modifyData[integer,integer](3,4); { 
b : boolean;
b=true;
if (b) if (b) if (b) if (b) {  } else {  }
while (false) { break; }
repeat { break; } while (false);
{ 
a : !array[[integer]];
}
while (false) while (true) if (false) if (true) clearRootNode[]();
} }
]